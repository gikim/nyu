#labor problem set 
data <- read.table("C:/Users/gkim/Documents/GKIM/gk1512/cw/house_hours.txt", sep="\t", header=FALSE)
n_r <- nrow(data)

# gauss code from professor

closeall
output file = Labor_1_assignment_3.out reset; 
library pgraph,optmum;
optset; 
_output = 0;

/* read data */
load x[823,5]=
n_r=rows(x);
meanc(x);
cap_t = 112; 

/*generate lambda values */ 
mu1 = -1.1;
mu2 = -1.2; 
sigma1 = .2;
sigma2 = .3; 
rho=.5; 
{eps_sim,newstate_sim}=rndn(n_r,2,1009967);

z1 = sigma1*eps_sim[.,1]+mu1;
z2 = sigma2*(rho*eps_sim[.,1]+sqrt(1-rho^2)*eps_sim[.,2])+mu2;
lambda1=exp(z1)./(1+exp(z1));
lambda2=exp(z2)./(1+exp(z2));

proc (2)=nash_solve(lam1,lam2,w1,w2,y);
local a1,a2,b1,b2,h1_hat,h2_hat,h1,h2;

/* if there are two Nash equilibria (one person in, one person out) choose the one in which the husband works */

a1=(1-lam1)*cap_t-lam1*y/w1;
a2=lam1*w2/w1;
b1=(1-lam2)*cap_t-lam2*y/w2;
b2=lam2*w1/w2;

h1=(a1-a2*b1)/(1-a2*b2);
h2=(b1-b2*a1)/(1-a2*b2);

if h1 gt 0 and h2 gt 0;
h1_hat = h1;
h2_hat - h2;

elseif h1 gt 0 and h2 le 0;
h1_hat = a1;
h2_hat = 0; 

elseif h1 le 0 and h2 gt 0;
  if a1 gt 0; 
    h1_hat = a1; 
    h2_hat = 0;
  else;
    h1_hat = 0;
    h2_hat = b1; 
  endif; 
else; 
  h1_hat = 0;
  h2_hat = 0; 
 endif;
 retp(h1_hat, h2_hat)'
 endp;
 
 /* create data set */ 
 mc_data = zeros(n_r,5)'
 i=1;
 do until i gt n_r;
 {h1_hat, h2_hat}=nash_solve(lambda1[i],lambda2[i],x[i,2],x[i,4],x[i,5]);

mc_data[i,1]=h1_hat;
mc_data[i,2]=x[i,2];

mc_data[i,3]=h2_hat;
mc_data[i,4]=x[i,4];
mc_data[i,5]=x[i,5];
i=i+1;
endo;

h_1 = mc_data[.,1];w_1=mc_data[.,2];h_2=mc_data[.,3];w_2=mc_data[.,4];y=mc_data[.,5];

/* now turn to simulation estimation exercises */
n_sims = 100;

/* draw random numbers eps_1 and eps_2 from standard normal 
use the same n_sims draws for all households */
{ eps, newstate } = rndn(n_sims,2,-45800321);

/* form sample moments */ 
real_m = h_1 ~ h_2 ~ (h_1-meanc(h_1))^2 ~ (h_2-meanc(h_2))^2 ~ h_1.*w_1 ~ h_2.*w_2 ~ h_1.*w_2~h_2.*w_1~h_1.

m_fit
meanc(h_1.*y) | meanc(h_2.*y);
print "************************************************************";
print "means and covariances of sample characteristics"; 
print m_fit;

covvar = varcovx(real_m);
print covvar; 
/* form weighting matrix */ 
wt_vec = 1 / diag(covvar); 
wt_mat = diagrv(zeros(1010), wt_vec); 

m_sim = 0; 
lambda_1 = 0; 
lambda_2 = 0; 

proc sim_est(b);
local 
mu_1, mu_2, sigma_1, sigma_2, rho, v_1, v_2,@lambda_1,lambda_2, @data_mat,ii,jj, hi_hat, h2_hat,
      sim_h_1, sim_w_1,sim_h_2,sim_w_2,sim_y, obj_value; 
      mu_1 = b[1];
      mu_2 = b[2];
      sigma_1 = exp(b[3]);
      sigma_2 = exp(b[4]);
      rho = tanh(b[5]);
      v_1 = sigma_1*eps[.,1]+mu_1;
      v_2 = sigma_2*(rho*[eps[.,1]+sqrt(1-rho^2)*eps[.,2]+mu_2;
      lambda_1=exp(v_1)./(1-exp(v_1);
      lambda_2=exp(v_2)./(1-exp(v_2);
data_mat=zeros(n_sims*n_r,5);
ii=2; 
do until ii gt 823; 
  jj=1; 
  do until jj gt n_sims; 
    {h1_hat,h2_hat}=nash_solve(lambda_1[jj], lambda_2[jj], w_1[ii], w_2[ii], y[ii]);
      data_mat[(ii-1)+jj,1]=h1_hat;
      data_mat[(ii-1)+jj,2]=w_1[ii];
      data_mat[(ii-1)+jj,3]=h2_hat;
      data_mat[(ii-1)+jj,4]=w_2[ii];
      data_mat[(ii-1)+jj,5]=y[ii];
      jj=jj_1;
     endo;
  ii=ii+1;
  endo;

/* now compute moments off of simulated data */
sim_h_1 = data_mat[.,1];sim_w_1=data_mat[.,2];sim_h_2=data_mat[.,3];sim_w_2=data_mat[.,4];sim_y=data_mat[.,5];
 m_sim=meanc(sim_h_1)|meanc(sim_h_2)|stddc(sim_h_1)^2|stddc(sim_h_2)^2|meanc(sim_h_1.*sim_w_1)|meanc(sim_h_2.*sim_w_2)|
meanc(sim_h_1.*sim_w_2)|meanc(sim_h_2.*sim_w_1)|meanc(sim_h_1.*sim_y)|meanc(sim_h_2.*sim_y);

obj_value=(m_fit-m_sim)'wt_mat*(m_fit-m_sim);
print "objective value" : " obj_value;
retp( obj_value );
endp; 

b0={-.4,-.4, -.5,-.5,-.3);
optprt(optmum(&sim_est,b0));
end;
